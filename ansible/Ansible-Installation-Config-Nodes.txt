
Ansible Inatallation & COnfigurations:

Launch 3 EC2 Instances... 1 for Ansible Controller & 2 as Nodes

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#Login to Ansible Node1 & Node2. Perform below activities:

++++++++++++++++++++++++++++++++++++++++++

target machine -> ssh keys
ansible controller  will connect to target through SSh key
and we are creating ssh key by ansibleadmin user and only this user has access to generated key

++++++++++++++++++++++++++++++++++++++++++

#Add User in Ansible Nodes1 : 

useradd -m -d /home/ansibleadmin ansibleadmin

su - ansibleadmin

ssh-keygen
>
>
>

cd /home/ansibleadmin/.ssh

ll

#You should see following two files:
#id_rsa - private key
#id_rsa.pub - public


#cat id_rsa & copy the private key and paste it into jenkins node config. enter private key directly field. Then,

cat id_rsa.pub > authorized_keys

chown -R ansibleadmin /home/ansibleadmin/.ssh
chmod 600 /home/ansibleadmin/.ssh/authorized_keys
chmod 700 /home/ansibleadmin/.ssh

exit 

#As a root user edit below file:

$ visudo

#  when working as root, if su - ansibleadmin ---> switches fine
# when working as ansibleadmin -> if sudo -i  -> it will prompt for password -> to disable this enter below command in visudo file.


add the below mentioned line in the file and save it.
ansibleadmin ALL=(ALL) NOPASSWD: ALL 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#Login to Ansible Controller:
yum install update -y
#Install epel Package :
#Install Ansible 
# Ansible is wriiten in python, if not Amazon-AMI, then we should intall python and then Ansible in other OS's.
# amazon-linux-extras is a package manager for Amazon-linux like how we have yum for Centos/Redhat

amazon-linux-extras install epel
amazon-linux-extras install ansible2

ansible --version

#go to /etc/ansible
==================================================
/etc/ansible : path where ansible has all its details
==================================================

#host - inventory file
#config  - will have all it configuration details
#roles 

# you can edit host file - add the ips of nodes

#[appservers]
#4.14.136.217
#3.16.116.209


#Add User in Ansible Controller : 

useradd -m -d /home/devopsadmin devopsadmin

chown -R devopsadmin:devopsadmin /etc/ansible

su - devopsadmin

cd /etc/ansible

##Create nodekeys dir under /etc/ansible to maintain the private key files of the nodes 

mkdir ansiblenodekeys

cd ansiblenodekeys

vi ansiblenode1.key ### copy & paste the private key of ansible-node1
vi ansiblenode2.key ### copy & paste the private key of ansible-node2

# Changing/Protecting ansiblenode keys access

chmod 600 ansiblenode1.key
chmod 600 ansiblenode2.key

#As a root user edit below file:
$ visudo

#add the below mentioned line in the file and save it.
devopsadmin ALL=(ALL) NOPASSWD: ALL


###test ssh connection from ansible host/controller to remote hosts

ssh -p22 -i /etc/ansible/ansiblenodekeys/ansiblenode1.key ansibleadmin@172.31.44.179   #private ip
ssh -p22 -i /etc/ansible/ansiblenodekeys/ansiblenode2.key ansibleadmin@172.31.41.222

###update vi etc/ansible/host

[testnodes]
samplenode1 ansible_ssh_host=172.31.44.179 ansible_ssh_user=ansibleadmin ansible_ssh_private_key_file=/etc/ansible/ansiblenodekeys/ansiblenode1.key 
samplenode2 ansible_ssh_host=172.31.41.222 ansible_ssh_user=ansibleadmin ansible_ssh_private_key_file=/etc/ansible/ansiblenodekeys/ansiblenode2.key

# private ip/static Ip

[testnodes2]
samplenode1 ansible_ssh_host=172.31.44.179 ansible_ssh_user=ansibleadmin ansible_ssh_private_key_file=/etc/ansible/ansiblenodekeys/ansiblenode1.key
samplenode2 ansible_ssh_host=172.31.41.222 ansible_ssh_user=ansibleadmin ansible_ssh_private_key_file=/etc/ansible/ansiblenodekeys/ansiblenode2.key

#**************************************
#hosts file is the default Inventory file for ansible 

**************************************************************************************************************************
#Access thru Ansible Controller :
**************************************************************************************************************************
ansible testnodes -m ping
=== other ways to call nodes ====

   74  ansible testnodes -m ping
   75  ansible -m ping samplenode1
   76  pwd
   77  ansible -m ping testnodes  -- adhoc commands
   78  ansible -m ping all
   79  ansible -m ping '*'
   80  clear
   81  history
 syntax : ansible <file_name/Host Group name> -m ping <node_name>
 > here we can create an inventoy file which we can use as Hosts and can call in syntax
> we can declare group inside group , group variables so on...


host machines can be idenfified using :

all | group_name | individual_host_name
