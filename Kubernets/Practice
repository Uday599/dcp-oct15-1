Kubernete
----------

Image link : https://platform9.com/wp-content/uploads/2019/05/kubernetes-constructs-concepts-architecture.jpg

Container Orchestration tool

Docker swarm -> supports only docker
Docker-compose -> used for orchestration in docker

kubernetes supports most of the tools
Manifest file -> is used for orchestration in kubernets


Architecture :
-------------



URL : https://kubernetes.io/docs/reference/kubectl/

Config file/manifest -> describes what configuration needed like Playbook in Ansible , writing in YAML or Json

KUBCTL -> command line to intract with master

---MASTER--

> API server gateway  -> this is the main building block , which process the config file
> ETCD -> database that stores info about worker nodes/pods/how many containers are running /there status etc ..and other related details
> Scheduler -> it identifies whihc PODS to pick to start work on..
> Controller -> it holds details about Worker node health/authorization/authentication etc...
 controller ensures that containers are always up and running , ensure high availablity and load balancing 

--WORKER NODE--VMs

Cluster -> collection of worker node
Inside worker node :
KUBELET -> it will receives request from controller and perform almost all weightlifting tasks like downloaing image etc..
Container Runtime engine Docker -> verifies the images and gets into dockerhub and then deploy it to containers/pods
kube Proxy -> allows pods to expose to outside world -> takes care of complete networking 
PODS -> collection of containers / single unit of work
basically if we have multiple containers, that means only one will br main and remaining all will be supportive container for main one


> Each POD's has its own IP address and each container has its own PORT
> Inter POD communication 
> Intra POD communication -> uses Local Host

Setup of K8:

MINIKUBE
--------

Git link : https://github.com/devopshydclub/vprofile-project/tree/kubernetes-setup

## Dependency => Oracle VM Virtualbox
##To Setup Chocolaty
##Open powershell as administrator and execute below command 
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
## If getting Error, Turn Off Your Anti Virus for a moment and try again.

## Install Minikube with chocolaty
## Close powershell and start again with admin

choco install minikube kubernetes-cli -y


##Execute to Setup Minikube cluster
minikube start

> cat .kube/config   -- holds the details about cluster
> kubectl get nodes 

---------------------------------------
Complete documentation on minikube - URL : https://kubernetes.io/docs/tutorials/hello-minikube/
---------------------------------------

Commands:

  370  git clone https://github.com/devopshydclub/vprofile-project.git  -> cloning
  371  cd vagrant-project
  372  cd vprofile-project
  373  ls
  374  git pull
  375  git checkout kubernetes-setup  -> moving into kubernetes branch
  376  ls
  377  cd
  378  minikube --help   
  379  minicube start
  380  minikube start
  381  kubectl get nodes
  382  clear
  383  cat .kube/config  -> gives the details about configuration/clusters path : home/.kube/config
  384  kubectl get nodes  -> when this command is run -> kubctl will access KUBECONFIG file for details
  385  kubectl create deployment hello-node --image=registry.k8s.io/echoserver:1.4  -> deploying 
  386  kubectl.exec get pod   --> didnt work
  387  kubectl get pod
  388  kubectl get deploy
  389  kubectl expose deployment hello-node --type=LoadBalancer --port=8080  -> exposing
  390  kubectl get services
  391  minikube service hello-node
  392  minikube get services
  393  kubectl get services
  394  kubectl delete service hello-node
  395  kubectl delete deployment hello-node
  396  kubectl get pod
  397  kubectl get service
  398  kubectl get nodes
  399  minikube stop
  400  minikube delete


Open Source:

Minikube
Kops
Kubeadm -- edureka

Manages services:
AKS,EKS,GKS
