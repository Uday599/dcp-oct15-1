VM -> will have os -> hypervisor -> each differecnt os -> application

Containers 

we dont have different OS's here , only underlying main OS will be used to run application 
Here we have entity called 'Docker' like hypervisor in VMs




#Docker Installation | Configuration | Commands & Concepts:


image = class

containers  = objects to call class(image)
dependencies and all will be there in containers
Registry - place where you store docker images
you can host your own registry / docker hub

sudo yum install docker


yum install docker -y
docker version
systemctl status docker
systemctl start docker
systemctl status docker
systemctl enable docker





#Basic Docker Commands :

#goto : https://hub.docker.com/

#Test Docker with basic hello-world image from docker hub.


 # by default lates tag will be pulled if not you can mention the required tag to download
docker pull centos 

docker run centos 

docker run centos
docker run nginx

docker pull hello-world
docker pull docker/whalesay


docker images

docker run centos

docker ps     --> this is used to get running containers
docker ps -a    --> this is used to get list of containes - running/stopped/exited etc...

### Run Container in Interactive Mode:
###docker run -it --name=testvol1 centos bash
docker run -it centos bash

i -> interactive mode
t -> in termainal

docker run -it <images> bash

root@a0303e44cb9e:/usr/local/tomcat#

root@<container_id): interactive mode


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
docker pull loksaieta/loksaimvndevops:v1.0

cat /etc/*release*

### Print the Docker Centos Image Release Info.
dockerpath# cat /etc/*release*
dockerpath# exit

###Run Docker Container in DETACHED MODE :
docker run -d centos sleep 20 
docker ps -a

###Run Docker Container in FOREGROUND MODE :
docker run centos sleep 20
docker ps -a

docker run -d centos sleep 200
docker stop <container_id>

docker rm 2c5b 1b4f

docker images
docker rmi <image_id>

### Before deleting image, ensure that it is not referenced to any container. 
### In it is mapped, delete the container first, then can re container image.

docker rmi -f hello-world

docker pull centos:centos7.9.2009

docker run centos sleep 1100

docker stop <container_id>
docker rm <contained_ip>

docket rmi <imaged_id>  - to remove the image from local machine

### Detached Mode
docker run -d centos sleep 2000

docker attach <running_container_id>
docker stop <container_id>

###docker pull timer

#docker pull jenkins

#docker run jenkins

docker inspect <container_id>

docker history <imagename>

docker run tomcat 

### Port-Mapping / Port-Binding

goto hub.docker & search for tomcat

docker run -it -p 8088:8080 tomcat:8.0

#### -p host_port:container_port

Once you install tomcat on ur vm :

<public_ip>:8088


###Docker Logs

docker logs <container_id>

#Access Docker contents using exec - Non-Interactive Mode: 

docker exec e8553a4721d5 cat /etc/hosts

#Login to Docker Container using exec in Interactive Mode: (Using Container Name) 

docker exec -it <container_name-gallant_blackburn> bash

#Run Docker Image in Interactive Mode: (Using Image Name) 

docker run -it centos bash
dockerpath# cat /etc/*release*
dockerpath# exit
